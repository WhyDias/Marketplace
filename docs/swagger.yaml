basePath: /
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.AddCategoryAttributesRequest:
    properties:
      attributes:
        items:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.CategoryAttributePayload'
        type: array
      category_id:
        type: integer
    required:
    - attributes
    - category_id
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.AddCategoryRequest:
    properties:
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - image_url
    - name
    - path
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.AddCategoryResponse:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.Category:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.CategoryAttribute:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.CategoryAttributePayload:
    properties:
      description:
        description: '*string для поддержки NULL'
        type: string
      name:
        type: string
      type_of_option:
        type: string
      value: {}
    required:
    - name
    - type_of_option
    - value
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.CategoryNode:
    properties:
      children:
        items:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.CategoryNode'
        type: array
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.CheckPhoneRequest:
    properties:
      username:
        description: Username используется как phone_number
        type: string
    required:
    - username
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.CheckPhoneResponse:
    properties:
      exists:
        type: boolean
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.LoginResponse:
    properties:
      access_token:
        type: string
      expires_at:
        description: Unix timestamp
        type: integer
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RegisterRequest:
    properties:
      phone_number:
        type: string
    required:
    - phone_number
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      roles:
        description: Добавлено поле для ролей
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - email
    - password
    - roles
    - username
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RegisterUserResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RequestPasswordResetRequest:
    properties:
      username:
        description: Username используется как phone_number
        type: string
    required:
    - username
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.RequestPasswordResetResponse:
    properties:
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.SetNewPasswordRequest:
    properties:
      confirm_password:
        type: string
      new_password:
        minLength: 6
        type: string
      username:
        description: Username используется как phone_number
        type: string
    required:
    - confirm_password
    - new_password
    - username
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.SetNewPasswordResponse:
    properties:
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.SetPasswordRequest:
    properties:
      confirm_password:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        type: string
    required:
    - confirm_password
    - password
    - phone_number
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.SetPasswordResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.UpdateSupplierDetailsRequest:
    properties:
      categories:
        items:
          type: integer
        type: array
      market_id:
        type: integer
      place:
        type: string
      row_name:
        type: string
    required:
    - categories
    - market_id
    - place
    - row_name
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.VerifyCodeRequest:
    properties:
      code:
        type: string
      phone_number:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_controllers.VerifyCodeResponse:
    properties:
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_models.AttributeValueRequest:
    properties:
      name:
        type: string
      value: {}
    required:
    - name
    - value
    type: object
  github_com_WhyDias_Marketplace_internal_models.Category:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      parent_id:
        allOf:
        - $ref: '#/definitions/sql.NullInt64'
        description: Используем sql.NullInt64
      path:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_models.CategoryAttributeResponse:
    properties:
      description:
        description: '*string с omitempty'
        type: string
      id:
        type: integer
      name:
        type: string
      type_of_option:
        description: '*string с omitempty'
        type: string
      value: {}
    type: object
  github_com_WhyDias_Marketplace_internal_models.Market:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_models.Product:
    properties:
      category_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      market_id:
        type: integer
      name:
        type: string
      price:
        type: number
      status_id:
        type: integer
      stock:
        type: integer
      supplier_id:
        type: integer
    type: object
  github_com_WhyDias_Marketplace_internal_models.ProductVariationRequest:
    properties:
      attributes:
        items:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.AttributeValueRequest'
        type: array
      images:
        items:
          type: string
        type: array
      price:
        type: number
      sku:
        type: string
      stock:
        type: integer
    required:
    - price
    - sku
    - stock
    type: object
  github_com_WhyDias_Marketplace_internal_models.UpdateProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      images:
        items:
          type: string
        type: array
      name:
        type: string
      variations:
        items:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.ProductVariationRequest'
        type: array
    type: object
  github_com_WhyDias_Marketplace_internal_models.UpdateSupplierDetailsResponse:
    properties:
      message:
        type: string
    type: object
  github_com_WhyDias_Marketplace_internal_utils.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  internal_controllers.AddCategoryAttributesRequest:
    properties:
      attributes:
        items:
          $ref: '#/definitions/internal_controllers.CategoryAttributePayload'
        type: array
      category_id:
        type: integer
    required:
    - attributes
    - category_id
    type: object
  internal_controllers.AddCategoryRequest:
    properties:
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - image_url
    - name
    - path
    type: object
  internal_controllers.AddCategoryResponse:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  internal_controllers.Category:
    properties:
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    type: object
  internal_controllers.CategoryAttribute:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  internal_controllers.CategoryAttributePayload:
    properties:
      description:
        description: '*string для поддержки NULL'
        type: string
      name:
        type: string
      type_of_option:
        type: string
      value: {}
    required:
    - name
    - type_of_option
    - value
    type: object
  internal_controllers.CategoryNode:
    properties:
      children:
        items:
          $ref: '#/definitions/internal_controllers.CategoryNode'
        type: array
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  internal_controllers.CheckPhoneRequest:
    properties:
      username:
        description: Username используется как phone_number
        type: string
    required:
    - username
    type: object
  internal_controllers.CheckPhoneResponse:
    properties:
      exists:
        type: boolean
    type: object
  internal_controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  internal_controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  internal_controllers.LoginResponse:
    properties:
      access_token:
        type: string
      expires_at:
        description: Unix timestamp
        type: integer
      message:
        type: string
    type: object
  internal_controllers.RegisterRequest:
    properties:
      phone_number:
        type: string
    required:
    - phone_number
    type: object
  internal_controllers.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  internal_controllers.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      roles:
        description: Добавлено поле для ролей
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - email
    - password
    - roles
    - username
    type: object
  internal_controllers.RegisterUserResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      message:
        type: string
    type: object
  internal_controllers.RequestPasswordResetRequest:
    properties:
      username:
        description: Username используется как phone_number
        type: string
    required:
    - username
    type: object
  internal_controllers.RequestPasswordResetResponse:
    properties:
      message:
        type: string
    type: object
  internal_controllers.SetNewPasswordRequest:
    properties:
      confirm_password:
        type: string
      new_password:
        minLength: 6
        type: string
      username:
        description: Username используется как phone_number
        type: string
    required:
    - confirm_password
    - new_password
    - username
    type: object
  internal_controllers.SetNewPasswordResponse:
    properties:
      message:
        type: string
    type: object
  internal_controllers.SetPasswordRequest:
    properties:
      confirm_password:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        type: string
    required:
    - confirm_password
    - password
    - phone_number
    type: object
  internal_controllers.SetPasswordResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      message:
        type: string
    type: object
  internal_controllers.UpdateSupplierDetailsRequest:
    properties:
      categories:
        items:
          type: integer
        type: array
      market_id:
        type: integer
      place:
        type: string
      row_name:
        type: string
    required:
    - categories
    - market_id
    - place
    - row_name
    type: object
  internal_controllers.VerifyCodeRequest:
    properties:
      code:
        type: string
      phone_number:
        type: string
    type: object
  internal_controllers.VerifyCodeResponse:
    properties:
      message:
        type: string
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
host: 195.49.215.120:8080
info:
  contact:
    email: support@your-website.com
    name: Support Team
    url: http://your-website.com/support
  description: API для Marketplace приложения.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: http://your-website.com/terms/
  title: Marketplace API
  version: "1.0"
paths:
  /api/categories:
    get:
      consumes:
      - application/json
      description: Получает все категории и подкатегории в иерархическом формате
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.CategoryNode'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Get all categories
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Добавляет новую категорию с заданными параметрами.
      parameters:
      - description: Данные для добавления категории
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.AddCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.AddCategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Добавление категории
      tags:
      - Категории
  /api/categories/{id}:
    get:
      consumes:
      - application/json
      description: Получает информацию о категории по её ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Get category by ID
      tags:
      - Categories
  /api/categories/{id}/attributes:
    get:
      consumes:
      - application/json
      description: Получает список атрибутов, связанных с категорией по её ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.CategoryAttribute'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Get category attributes
      tags:
      - Categories
  /api/categories/attributes:
    post:
      consumes:
      - application/json
      description: Добавляет один или несколько атрибутов к заданной категории
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные атрибутов
        in: body
        name: attributes
        required: true
        schema:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.AddCategoryAttributesRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Атрибуты успешно добавлены
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "400":
          description: Неверный формат данных или ошибки валидации
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "401":
          description: Необходима авторизация
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Добавить атрибуты к категории
      tags:
      - Categories
  /api/categories/root:
    get:
      consumes:
      - application/json
      description: Получает список корневых категорий
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Get root categories
      tags:
      - Categories
  /api/categories/search:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о категории на основе переданного path.
      parameters:
      - description: Path категории
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      summary: Получение категории по path
      tags:
      - Категории
  /api/categories/subcategories:
    get:
      consumes:
      - application/json
      description: Получает подкатегории первого уровня для заданного пути категории
      parameters:
      - description: Category path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Get immediate subcategories
      tags:
      - Categories
  /api/products:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет новый продукт вместе с его вариациями и изображениями
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Название продукта
        in: formData
        name: name
        required: true
        type: string
      - description: Описание продукта
        in: formData
        name: description
        type: string
      - description: Цена продукта
        in: formData
        name: price
        required: true
        type: number
      - description: Количество продукта на складе
        in: formData
        name: stock
        required: true
        type: integer
      - description: ID категории
        in: formData
        name: category_id
        required: true
        type: integer
      - description: Изображения продукта
        in: formData
        name: images
        required: true
        type: file
      - description: JSON-строка с вариациями продукта
        in: formData
        name: variations
        type: string
      - description: Изображения для вариаций
        in: formData
        name: variation_images
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Продукт успешно добавлен
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Неверный формат данных или ошибки валидации
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "401":
          description: Необходима авторизация
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Добавить новый продукт
      tags:
      - Products
  /api/products/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о продукте и его вариациях
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a product
      tags:
      - Products
  /api/products/moderated:
    get:
      description: Возвращает список продуктов, находящихся на модерации (status_id
        = 3).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.Product'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение продуктов с модерацией
      tags:
      - Продукты
  /api/products/unmoderated:
    get:
      description: Возвращает список продуктов, прошедших модерацию (status_id = 2).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.Product'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение продуктов без модерации
      tags:
      - Продукты
  /api/users/check_phone:
    post:
      consumes:
      - application/json
      description: Проверяет, существует ли пользователь с указанным номером телефона
      parameters:
      - description: Номер телефона для проверки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.CheckPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.CheckPhoneResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Проверка существования номера телефона
      tags:
      - Авторизация
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает JWT-токен с ролями.
      parameters:
      - description: Данные для логина
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Логин пользователя
      tags:
      - Авторизация
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с указанными ролями.
      parameters:
      - description: Данные для регистрации пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_controllers.RegisterUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - Пользователи
  /api/users/request_password_reset:
    post:
      consumes:
      - application/json
      description: Отправляет код подтверждения на указанный номер телефона для сброса
        пароля
      parameters:
      - description: Номер телефона для сброса пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.RequestPasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.RequestPasswordResetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Запрос на сброс пароля
      tags:
      - Восстановление доступа
  /api/users/set_new_password:
    post:
      consumes:
      - application/json
      description: Устанавливает новый пароль для пользователя после верификации кода
        сброса пароля
      parameters:
      - description: Данные для установки нового пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.SetNewPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.SetNewPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Установка нового пароля
      tags:
      - Восстановление доступа
  /api/users/verify_code:
    post:
      consumes:
      - application/json
      description: Проверяет код подтверждения, отправленный на номер телефона.
      parameters:
      - description: Данные для верификации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.VerifyCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Верификация кода подтверждения
      tags:
      - Восстановление доступа
  /categories:
    get:
      consumes:
      - application/json
      description: Возвращает список всех доступных категорий товаров вместе с URL
        изображений.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      summary: Получение списка категорий
      tags:
      - Справочники
  /categories/{id}/attributes:
    get:
      consumes:
      - application/json
      description: Возвращает список атрибутов для заданной категории
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.CategoryAttributeResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_utils.ErrorResponse'
      summary: Получить атрибуты категории по ID
      tags:
      - Categories
  /markets:
    get:
      consumes:
      - application/json
      description: Возвращает список всех доступных рынков.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.Market'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      summary: Получение списка рынков
      tags:
      - Справочники
  /register:
    post:
      consumes:
      - application/json
      description: Отправляет код подтверждения на указанный номер телефона.
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Отправка кода подтверждения
      tags:
      - Авторизация
  /set_password:
    post:
      consumes:
      - application/json
      description: Устанавливает пароль для пользователя и возвращает JWT-токен с
        ролями.
      parameters:
      - description: Данные для установки пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.SetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.SetPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Установка пароля
      tags:
      - Авторизация
  /supplier/update_details:
    post:
      consumes:
      - application/json
      description: Обновляет информацию о поставщике.
      parameters:
      - description: Данные для обновления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.UpdateSupplierDetailsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_models.UpdateSupplierDetailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_WhyDias_Marketplace_internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление данных поставщика
      tags:
      - Поставщик
  /verify:
    post:
      consumes:
      - application/json
      description: Проверяет код подтверждения, отправленный на номер телефона.
      parameters:
      - description: Данные для верификации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.VerifyCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Верификация кода подтверждения
      tags:
      - Авторизация
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
