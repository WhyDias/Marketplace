basePath: /
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginUserResponse:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
    type: object
  controllers.RegisterRequest:
    properties:
      phone_number:
        type: string
    required:
    - phone_number
    type: object
  controllers.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  controllers.RegisterSupplierRequest:
    properties:
      category:
        type: string
      market_name:
        type: string
      name:
        type: string
      phone_number:
        type: string
      places_rows:
        type: string
    required:
    - category
    - market_name
    - name
    - phone_number
    - places_rows
    type: object
  controllers.RegisterUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterUserResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  controllers.VerifyRequest:
    properties:
      code:
        type: string
      phone_number:
        type: string
    required:
    - code
    - phone_number
    type: object
  controllers.VerifyResponse:
    properties:
      message:
        type: string
    type: object
  models.Supplier:
    properties:
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_verified:
        type: boolean
      market_name:
        type: string
      name:
        type: string
      phone_number:
        type: string
      places_rows:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@yourproject.com
    name: API Support
    url: http://yourproject.com/support
  description: This is the API documentation for the Marketplace application.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://yourproject.com/terms/
  title: Marketplace API
  version: "1.0"
paths:
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      tags:
      - users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with username and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.RegisterUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Registers a phone number and sends a verification code via WhatsApp
      parameters:
      - description: Phone number
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      tags:
      - verification
  /suppliers:
    get:
      description: Retrieves a list of all suppliers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Supplier'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      tags:
      - suppliers
  /suppliers/info:
    get:
      description: Retrieves information about the authenticated supplier
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Supplier'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      tags:
      - suppliers
  /suppliers/register:
    post:
      consumes:
      - application/json
      description: Updates supplier details if verified, or creates a new verified
        supplier.
      parameters:
      - description: Supplier registration data
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterSupplierRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.VerifyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      tags:
      - suppliers
  /verify:
    post:
      consumes:
      - application/json
      description: Verifies a phone number with the provided code. If the phone number
        does not exist, a new supplier is created and marked as verified.
      parameters:
      - description: Phone number and verification code
        in: body
        name: verification
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.VerifyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      tags:
      - verification
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
